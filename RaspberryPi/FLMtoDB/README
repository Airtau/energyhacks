In the following it is briefly explains installing mySQL with python access
and mosquitto to run the flm_*_to_db.py scripts.

This refers to a Raspbian Wheezy installation to be downloaded from
http://www.raspberrypi.org/downloads - I went through the steps on a fresh
installation.
Clone my Github repository into your /home/pi folder using
git clone https://github.com/gebhardm/energyhacks
Then the energyhacks/RaspberryPi folder contains all you actually need.

1) sudo apt-get install mysql-server mysql-client

This installs the database and all dependent packages not already installed.
During installation you are asked for a root password of the database; I chose
'raspberry' for this (as a no-brainer to the default wheezy password)

2) sudo apt-get install python-mysqldb python-dev

This installs the python 2 modules to access the database; currently only 
python 2 seems to be working?!

3) wget http://repo.mosquitto.org/debian/mosquitto-repo.gpg.key
   sudo apt-key add mosquitto-repo.gpg.key
   cd /etc/apt/sources.list.d
   sudo wget http://repo.mosquitto.org/debian/mosquitto-wheezy.list
   sudo apt-get update
   sudo apt-get install mosquitto mosquitto-clients python-mosquitto
   sudo /etc/init.d/mosquitto stop
   
Follow http://mosquitto.org/2013/01/mosquitto-debian-repository/ to install
mosquitto, the MQTT infrastructure; alternatively have a look at the nice
description at http://jpmens.net/2013/09/01/installing-mosquitto-on-a-raspberry-pi/   
   
4) mysql -u root -p
   create database flm;

Log into the database as root; provide above given password when asked.
Create the database used in the logging scripts; chose whatever you like, but
be sure to have the same database applied also in the scripts. Log out of the 
database with quit; (don't forget the semicolon)
You may also introduce another database user and grant corresponding 
permissions; use one of the may descriptions in the WWW to do this.

Now you are able to run the scripts and store sensor data in the flm database.

When using the flm_mqtt_to_db.py script, be sure to have changed the sensor
IDs to your own ones as well as the LAN address of your fluksometer.

nohup python flm_mqtt_to_db.py &

Alternatively use the generic script that filters relevant sensor data.

nohup python flm_mqtt_db_gen.py &

The latter subscribes to /sensor/# and filters for "gauge" subtopics;
disadvantage here is that not a "name" but the sensor ID is written to
the database as sensor identification key.

Use the nohup to keep the script running also when logged out of the RasPi
(I access the RasPi remotely via SSH); note that for flm_query_to_db.py
no mosquitto installation is required as this script accesses the REST interface.

5) mysql -u root -p flm
   show tables;
   select * from flmdata;
   
Access the database and look at the stored data; you may pass the stored data also
to a .csv file using following SQL query

   select *
   into outfile '~/flmdata.csv'
   fields terminated by ','
   lines terminated by '\n'
   from flmdata;
   
Without the prefix "~/" this query stores the flmdata.csv file in the MySQL 
default folder /var/lib/mysql/flm that needs to be made readable using 
sudo chmod 755 /var/lib/mysql/flm; use another folder with proper access 
rights to your convenience.
